# naive native language processing for english based on my own loose skimming
# of random internet articles on grammar
main = {<sentence>};

#sentence := <clauses> ("." | "?" | "!");
sentence := declarative-sentence
          | interrogative-sentence;

declarative-sentence := clauses ("." | "!" | ":");
interrogative-sentence := interrogative-verb-phrase clauses [preposition] "?";

#clauses := (subclause {[","] conjunction clauses})
#		 | subclause;

#clauses = subject-clause;
clauses = conjunction-clause;

subject-clause := ((SVO-clause thing)
                |  (SV-clause thing))
                |  (SVO-clause)
                |  (SV-clause)
                ;

thing = ({prep-dep-clause} [conjunction-clause])
      | conjunction-clause;

conjunction-clause := [","]
                      ( conjunction subject-clause )
                    | ( conjunction verb-dep-clause {prep-dep-clause} [conjunction-clause] )
                    | ( conjunction verb-dep-clause [conjunction-clause] )
                    | (subject-clause)
                    ;

#subclause = independent-clause
#          | dependent-clause
#          | (clause {dependent-clause})
#          | clause;

#independent-clause := (clause object {dependent-clause})
#                    | (clause object);

SV-clause := subject verb;
SVO-clause := (subject verb         object)
            | (subject linking-verb object)
            ;

# XXX: what are the rules for prepositions here?
#dependent-clause := (preposition {clauses})
#                  | (preposition object)
#
#                  | (preposition noun)
#                  | (preposition verb noun)
#                  | (preposition verb)
#                  ;

prep-dep-clause := preposition noun;
verb-dep-clause := verb noun;

#subject := pronoun | noun;
#object := pronoun | noun;

subject = noun;
object = [adjective] noun;

article *:= "any " | "an " | "a " | "the " | "those ";

# XXX: can't handle un-capitalized nouns without a preceding article
# XXX: also consider quotations to be nouns for parsing purposes
# XXX: could partially handle pronoun/reference
#      ambiguities by having separate noun rules with and without
#      references, most ambiguities that are parsed incorrectly
#      result in bad parses overall
#      (see SVO linking-verb hax above)
atomic-noun := ("n:" {lowercase})
      | (referrent-pronoun common-noun)
      | pronoun
      | (article [adjective] common-noun)
      | proper-noun
      | quotation;
	
noun := noun-list | atomic-noun;

noun-list := (atomic-noun [<",">] noun-list)
           | ("and" atomic-noun);

common-noun *:= {lowercase};
proper-noun *:= (uppercase {lowercase});
# assume all pronouns are lowercase.
pronoun *:= ("it" | "I"
          | "they" | "them" | "their" | "theirs"
          | "she" | "her" | "hers"
          | "he"  | "him" | "his"
          | "you" | "your" | "yours"
          | "there" | "this" | "that");

# TODO: what's the proper name for this?
referrent-pronoun *:= ("your" | "their" | "his" | "her" | "my" | "this") " ";

verb *:= ("v:" {lowercase})
       | (linking-verb [verb])
       | (adverb verb)
       | (regular-verb {adverb})
       | (regular-verb);

linking-verb *:= ("am" | "is" | "was" | "are" | "were"
               | "has been" | "have been" | "must have been"
               | "might have been" | "must have" | "must" | "become"
               | "does" | "do" | "will" | "would" | "can" | "should"
               )
               ((negation " ") | (" " negation) | " ");

negation *:= "not" | "n't";

# XXX: treat "who" as an interrogative adverb
interrogative-adverb *:= "what" | "where" | "how" | "when" | "why" | "who";

regular-verb *:= {lowercase};

# XXX: also assume all adjectives end in "ing" lol
adjective *:= ["very"] ({lowercase} "ing") | ("adj:" {lowercase});
# XXX: and "ly" for adverbs
#adverb *:= "very" | ({![" ly"]} "ly");
adverb *:= ["very"] ("adv:" {lowercase});

# XXX: needed to prevent starting a question with any verb
interrogative-verb-phrase *:= [interrogative-adverb] linking-verb;

# subset of https://www.englishclub.com/grammar/prepositions-list.htm
preposition *:= ("as" | "at" | "by" | "for" | "from"
              | "inside" | "into" | "in" | "like" | "near" | "of" | "off"
              | "onto" | "on" | "over" | "per" | "than" | "to"
              | "under" | "unlike" | "until" | "up" | "versus"
              | "via" | "within" | "without" | "with"
              | "around") " ";

conjunction := coordinating_conjunct
             | subordinating_conjunct
             | correlating_conjuct;

coordinating_conjunct *:= ("for" | "and" | "nor" | "but" | "or" | "yet" | "so") " ";
subordinating_conjunct *:= (
    "after" | "although" | "as" | "as if" | "as long as"
    | "as much as" | "as soon as" | "as though" | "because" | "before"
    | "by the time" | "even if" | "even though" | "if" | "in order that"
    | "in case" | "lest" | "once" | "only if" | "provided that" | "since"
    | "so that" | "such that" | "than" | "that" | "though" | "till"
    | "unless" | "until" | "when" | "whenever" | "where" | "wherever" | "while"
    | "which"
    | "then" | "otherwise") " ";

correlating_conjuct *:= "asdf";

quotation *:= "\"" {![\"]} "\"";
